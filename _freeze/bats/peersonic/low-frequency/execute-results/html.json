{
  "hash": "9e00bec98c507c7f7a9c8fdf8b085925",
  "result": {
    "markdown": "---\ntitle: Peersonic RPA2 bat detector and low frequencies\nauthor: Thierry Onkelinx\ndate: \"2017-07-14\"\ncategories: [bats, tool review]\nfixed: true\n---\n\n\nRecently René Janssen from [Bionet Natuuronderzoek](http://www.bionetnatuur.eu/) was looking for an automatic bat-detector which could record sounds starting from 4 kHz.\nThat was an incentive to put the Peersonic RPA2 to the test.\n\n## Generating a test sound\n\nFor this test I needed a file with known frequencies over a given range.\nIt turns out that creating such a test file is relatively easy with [R](https://www.r-project.org).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tuneR)\n# sample rate of the sound in Hz\n# must be at least twice the highest frequency\nsample.rate <- 50e3\n# duration of the sound in seconds\nduration <- 5\n# lowest and highest frequency in the sound\nsound.freq.range <- c(1e3, 21e3)\n# number of steps between the lowest and higest frequency\nsound.freq.steps <- 40\n# time\nt <- seq(0, duration - 1 / sample.rate, by = 1 / sample.rate)\n# vector of frequencies\nsound.freq <- seq(\n  sound.freq.range[1], \n  sound.freq.range[2],\n  length = sound.freq.steps\n)\n# stretch the frequency vector to 1 second\nsound.freq <- rep(\n  sound.freq,\n  each = sample.rate / sound.freq.steps\n)\n# amplitude of the sound\nu <- (2^15 - 1) * sin(2 * pi * sound.freq * t)\n# create Wave object\nw <- Wave(u, samp.rate = sample.rate, bit = 16)\n# save Wave object to wav file\nwriteWave(w, \"test.wav\")\n```\n:::\n\n\n## Play and record the test sound\n\n![Test setup with RPA2 detector.](peersonic-headphones.jpg){fig-alt=\"RPA2 detector with headphones mounted over the microphone.\" style=\"float: left; padding: 10px;\"}\nNow I have a file [test.wav](test.wav) which has sounds ranging from 1kHz up to 21kHz.\nI played this file using [Audacity](http://www.audacityteam.org/) on a [Ubuntu](https://www.ubuntu.com) laptop.\nThe laptop speakers failed to play sounds above 15 kHz, so I tried my [Philips SHB9850NC headphones](http://www.philips.co.uk/c-p/SHB9850NC_00/wireless-noise-cancelling-headphones).\nSome testing revealable that I was able to hear sounds up to 22,5 kHz.\nI'm not sure whether the headphones, my ears or both failed at higher frequencies ;-)\nSo I placed the headphones over the Peersonic RPA2 as show in the photo.\nThen the Peersonic was set in `auto record` mode with a threshold of `-30dB` and a maximum file length of `20` seconds.\nThe volume on the laptop was set about half way.\nThen I played the test file several times.\n\n## Comparison of the original test file and the recording\n\nLet's first look at the spectrogram of the [test file](test.wav).\nAgain, something which it not that hard with [R](https://www.r-project.org)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntruth <- readWave(\"test.wav\")@left\nlibrary(signal)\nwindow.n <- 1024\ntruth_spec <- specgram(\n  x = truth,\n  n = window.n,\n  Fs = sample.rate,\n  overlap = ceiling(0.9 * window.n)\n)\nplot(truth_spec, col = rainbow(10))\n```\n\n::: {.cell-output-display}\n![Spectrogram of the generated test file](low-frequency_files/figure-html/truth-spec-1.png){fig-alt='Spectrogram of the generated test file' width=672}\n:::\n:::\n\n\nThen do the same thing with the file [recording.wav](recording.wav) as recorded by the Peersonic RPA2.\nThe Peersonic RPA2 records multiple of 5 seconds, hence the silence a the end.\nNote that the test file did not contain frequencies above 21kHz.\nThe noise around 32kHz is probably due to the fan of my laptop.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrecording <- readWave(\"recording.wav\", to = 5 * 384e3)\nwindow.n <- 1024\nrecord_spec <- specgram(\n  x = recording@left,\n  n = window.n,\n  Fs = recording@samp.rate,\n  overlap = ceiling(0.9 * window.n)\n)\nplot(record_spec, col = rainbow(10))\n```\n\n::: {.cell-output-display}\n![Complete spectrogram of the recorded test file](low-frequency_files/figure-html/rec-spec-full-1.png){fig-alt='Complete spectrogram of the recorded test file' width=672}\n:::\n:::\n\n\nI've zoomed into to the relevant section of the recording: the first 5 seconds and from 0kHz up to 30kHz.\nThe Peersonic RPA2 seems to record sounds as low as 21kHz.\nThe sensitivity of the microphone seems to be a bit lower under 5kHz.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(record_spec, col = rainbow(10), xlim = c(0, 5), ylim = c(0, 30e3))\n```\n\n::: {.cell-output-display}\n![Detail of the spectrogram of the recorded test file](low-frequency_files/figure-html/rec-spec-detail-1.png){fig-alt='Detail of the spectrogram of the recorded test file' width=672}\n:::\n:::\n\n\n## Session info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessioninfo::session_info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.2.1 (2022-06-23)\n os       Ubuntu 20.04.4 LTS\n system   x86_64, linux-gnu\n ui       X11\n language nl_BE:nl\n collate  nl_BE.UTF-8\n ctype    nl_BE.UTF-8\n tz       Europe/Brussels\n date     2022-08-14\n pandoc   2.18 @ /usr/lib/rstudio/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version date (UTC) lib source\n cli           3.3.0   2022-04-25 [1] CRAN (R 4.2.0)\n digest        0.6.29  2021-12-01 [1] CRAN (R 4.2.0)\n evaluate      0.15    2022-02-18 [1] CRAN (R 4.2.0)\n fastmap       1.1.0   2021-01-25 [1] CRAN (R 4.2.0)\n htmltools     0.5.2   2021-08-25 [1] CRAN (R 4.2.0)\n htmlwidgets   1.5.4   2021-09-08 [1] CRAN (R 4.2.0)\n jsonlite      1.8.0   2022-02-22 [1] CRAN (R 4.2.0)\n knitr         1.39    2022-04-26 [1] CRAN (R 4.2.0)\n magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.2.0)\n MASS          7.3-57  2022-04-22 [1] CRAN (R 4.2.0)\n rlang         1.0.3   2022-06-27 [1] CRAN (R 4.2.1)\n rmarkdown     2.14.1  2022-05-04 [1] https://thierryo.r-universe.dev (R 4.2.0)\n rstudioapi    0.13    2020-11-12 [1] CRAN (R 4.2.0)\n sessioninfo   1.2.2   2021-12-06 [1] CRAN (R 4.2.0)\n signal      * 0.7-7   2021-05-25 [1] CRAN (R 4.2.0)\n stringi       1.7.6   2021-11-29 [1] CRAN (R 4.2.0)\n stringr       1.4.0   2019-02-10 [1] CRAN (R 4.2.0)\n tuneR       * 1.4.0   2022-03-29 [1] CRAN (R 4.2.0)\n xfun          0.31    2022-05-10 [1] CRAN (R 4.2.0)\n yaml          2.3.5   2022-02-21 [1] CRAN (R 4.2.0)\n\n [1] /home/thierry/R/x86_64-pc-linux-gnu-library/4.0\n [2] /usr/local/lib/R/site-library\n [3] /usr/lib/R/site-library\n [4] /usr/lib/R/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n:::\n:::\n",
    "supporting": [
      "low-frequency_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}